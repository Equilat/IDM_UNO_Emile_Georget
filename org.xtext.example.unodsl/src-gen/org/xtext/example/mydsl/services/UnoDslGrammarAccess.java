/*
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class UnoDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUnoConfigKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUnoRulesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUnoRulesUnoConfigParserRuleCall_1_0 = (RuleCall)cUnoRulesAssignment_1.eContents().get(0);
		private final Keyword cUnoConfigKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Model:
		//	'<UnoConfig>' unoRules+=UnoConfig '</UnoConfig>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<UnoConfig>' unoRules+=UnoConfig '</UnoConfig>'
		public Group getGroup() { return cGroup; }
		
		//'<UnoConfig>'
		public Keyword getUnoConfigKeyword_0() { return cUnoConfigKeyword_0; }
		
		//unoRules+=UnoConfig
		public Assignment getUnoRulesAssignment_1() { return cUnoRulesAssignment_1; }
		
		//UnoConfig
		public RuleCall getUnoRulesUnoConfigParserRuleCall_1_0() { return cUnoRulesUnoConfigParserRuleCall_1_0; }
		
		//'</UnoConfig>'
		public Keyword getUnoConfigKeyword_2() { return cUnoConfigKeyword_2; }
	}
	public class UnoConfigElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.UnoConfig");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cTalonJeuKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cNbCartesKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cNbCartesTalonAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cNbCartesTalonNbCartesTalonEnumRuleCall_0_3_0 = (RuleCall)cNbCartesTalonAssignment_0_3.eContents().get(0);
		private final Keyword cSolidusGreaterThanSignKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Assignment cTempsLimiteAssignment_1 = (Assignment)cUnorderedGroup.eContents().get(1);
		private final RuleCall cTempsLimiteTempsLimiteParserRuleCall_1_0 = (RuleCall)cTempsLimiteAssignment_1.eContents().get(0);
		private final Assignment cDeposeCartesAssignment_2 = (Assignment)cUnorderedGroup.eContents().get(2);
		private final RuleCall cDeposeCartesDeposeCartesParserRuleCall_2_0 = (RuleCall)cDeposeCartesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cMainKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cVisibiliteKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cEqualsSignKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cVisibiliteAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cVisibiliteVisibiliteParserRuleCall_3_3_0 = (RuleCall)cVisibiliteAssignment_3_3.eContents().get(0);
		private final Keyword cNombreDePilesKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cEqualsSignKeyword_3_5 = (Keyword)cGroup_3.eContents().get(5);
		private final Assignment cNombreDePilesAssignment_3_6 = (Assignment)cGroup_3.eContents().get(6);
		private final RuleCall cNombreDePilesNombreDePilesParserRuleCall_3_6_0 = (RuleCall)cNombreDePilesAssignment_3_6.eContents().get(0);
		private final Keyword cSolidusGreaterThanSignKeyword_3_7 = (Keyword)cGroup_3.eContents().get(7);
		private final Assignment cCartesSpecialesAssignment_4 = (Assignment)cUnorderedGroup.eContents().get(4);
		private final RuleCall cCartesSpecialesCartesSpecialesParserRuleCall_4_0 = (RuleCall)cCartesSpecialesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cPiocheKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNombreDePiochesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNombreDePiochesNombreDePiochesParserRuleCall_5_1_0 = (RuleCall)cNombreDePiochesAssignment_5_1.eContents().get(0);
		private final Keyword cPiocheKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//UnoConfig:
		//	'<TalonJeu' 'nbCartes' '=' nbCartesTalon=NbCartesTalon '/>' & tempsLimite=TempsLimite? & deposeCartes=DeposeCartes? &
		//	'<Main' 'visibilite' '=' visibilite=Visibilite 'nombreDePiles' '=' nombreDePiles=NombreDePiles '/>' &
		//	cartesSpeciales=CartesSpeciales? & '<Pioche>' nombreDePioches=NombreDePioches '</Pioche>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<TalonJeu' 'nbCartes' '=' nbCartesTalon=NbCartesTalon '/>' & tempsLimite=TempsLimite? & deposeCartes=DeposeCartes? &
		//'<Main' 'visibilite' '=' visibilite=Visibilite 'nombreDePiles' '=' nombreDePiles=NombreDePiles '/>' &
		//cartesSpeciales=CartesSpeciales? & '<Pioche>' nombreDePioches=NombreDePioches '</Pioche>'
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//'<TalonJeu' 'nbCartes' '=' nbCartesTalon=NbCartesTalon '/>'
		public Group getGroup_0() { return cGroup_0; }
		
		//'<TalonJeu'
		public Keyword getTalonJeuKeyword_0_0() { return cTalonJeuKeyword_0_0; }
		
		//'nbCartes'
		public Keyword getNbCartesKeyword_0_1() { return cNbCartesKeyword_0_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_2() { return cEqualsSignKeyword_0_2; }
		
		//nbCartesTalon=NbCartesTalon
		public Assignment getNbCartesTalonAssignment_0_3() { return cNbCartesTalonAssignment_0_3; }
		
		//NbCartesTalon
		public RuleCall getNbCartesTalonNbCartesTalonEnumRuleCall_0_3_0() { return cNbCartesTalonNbCartesTalonEnumRuleCall_0_3_0; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_0_4() { return cSolidusGreaterThanSignKeyword_0_4; }
		
		//tempsLimite=TempsLimite?
		public Assignment getTempsLimiteAssignment_1() { return cTempsLimiteAssignment_1; }
		
		//TempsLimite
		public RuleCall getTempsLimiteTempsLimiteParserRuleCall_1_0() { return cTempsLimiteTempsLimiteParserRuleCall_1_0; }
		
		//deposeCartes=DeposeCartes?
		public Assignment getDeposeCartesAssignment_2() { return cDeposeCartesAssignment_2; }
		
		//DeposeCartes
		public RuleCall getDeposeCartesDeposeCartesParserRuleCall_2_0() { return cDeposeCartesDeposeCartesParserRuleCall_2_0; }
		
		//'<Main' 'visibilite' '=' visibilite=Visibilite 'nombreDePiles' '=' nombreDePiles=NombreDePiles '/>'
		public Group getGroup_3() { return cGroup_3; }
		
		//'<Main'
		public Keyword getMainKeyword_3_0() { return cMainKeyword_3_0; }
		
		//'visibilite'
		public Keyword getVisibiliteKeyword_3_1() { return cVisibiliteKeyword_3_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_2() { return cEqualsSignKeyword_3_2; }
		
		//visibilite=Visibilite
		public Assignment getVisibiliteAssignment_3_3() { return cVisibiliteAssignment_3_3; }
		
		//Visibilite
		public RuleCall getVisibiliteVisibiliteParserRuleCall_3_3_0() { return cVisibiliteVisibiliteParserRuleCall_3_3_0; }
		
		//'nombreDePiles'
		public Keyword getNombreDePilesKeyword_3_4() { return cNombreDePilesKeyword_3_4; }
		
		//'='
		public Keyword getEqualsSignKeyword_3_5() { return cEqualsSignKeyword_3_5; }
		
		//nombreDePiles=NombreDePiles
		public Assignment getNombreDePilesAssignment_3_6() { return cNombreDePilesAssignment_3_6; }
		
		//NombreDePiles
		public RuleCall getNombreDePilesNombreDePilesParserRuleCall_3_6_0() { return cNombreDePilesNombreDePilesParserRuleCall_3_6_0; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_3_7() { return cSolidusGreaterThanSignKeyword_3_7; }
		
		//cartesSpeciales=CartesSpeciales?
		public Assignment getCartesSpecialesAssignment_4() { return cCartesSpecialesAssignment_4; }
		
		//CartesSpeciales
		public RuleCall getCartesSpecialesCartesSpecialesParserRuleCall_4_0() { return cCartesSpecialesCartesSpecialesParserRuleCall_4_0; }
		
		//'<Pioche>' nombreDePioches=NombreDePioches '</Pioche>'
		public Group getGroup_5() { return cGroup_5; }
		
		//'<Pioche>'
		public Keyword getPiocheKeyword_5_0() { return cPiocheKeyword_5_0; }
		
		//nombreDePioches=NombreDePioches
		public Assignment getNombreDePiochesAssignment_5_1() { return cNombreDePiochesAssignment_5_1; }
		
		//NombreDePioches
		public RuleCall getNombreDePiochesNombreDePiochesParserRuleCall_5_1_0() { return cNombreDePiochesNombreDePiochesParserRuleCall_5_1_0; }
		
		//'</Pioche>'
		public Keyword getPiocheKeyword_5_2() { return cPiocheKeyword_5_2; }
	}
	public class TempsLimiteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.TempsLimite");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDureeTourKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDureeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_3_0 = (RuleCall)cAlternatives_3.eContents().get(0);
		private final Keyword cDigitZeroKeyword_3_1 = (Keyword)cAlternatives_3.eContents().get(1);
		private final Keyword cDigitOneKeyword_3_2 = (Keyword)cAlternatives_3.eContents().get(2);
		private final Keyword cSolidusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TempsLimite:
		//	'<DureeTour' 'duree' '=' (INT | '0' | '1') '/>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<DureeTour' 'duree' '=' (INT | '0' | '1') '/>'
		public Group getGroup() { return cGroup; }
		
		//'<DureeTour'
		public Keyword getDureeTourKeyword_0() { return cDureeTourKeyword_0; }
		
		//'duree'
		public Keyword getDureeKeyword_1() { return cDureeKeyword_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }
		
		//(INT | '0' | '1')
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3_0() { return cINTTerminalRuleCall_3_0; }
		
		//'0'
		public Keyword getDigitZeroKeyword_3_1() { return cDigitZeroKeyword_3_1; }
		
		//'1'
		public Keyword getDigitOneKeyword_3_2() { return cDigitOneKeyword_3_2; }
		
		//'/>'
		public Keyword getSolidusGreaterThanSignKeyword_4() { return cSolidusGreaterThanSignKeyword_4; }
	}
	public class DeposeCartesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.DeposeCartes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReglesSpecialesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnumReglesDeposeCartesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEnumReglesDeposeCartesEnumReglesDeposeCartesParserRuleCall_1_0 = (RuleCall)cEnumReglesDeposeCartesAssignment_1.eContents().get(0);
		private final Keyword cReglesSpecialesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DeposeCartes:
		//	'<ReglesSpeciales>'
		//	enumReglesDeposeCartes+=EnumReglesDeposeCartes
		//	'</ReglesSpeciales>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<ReglesSpeciales>' enumReglesDeposeCartes+=EnumReglesDeposeCartes '</ReglesSpeciales>'
		public Group getGroup() { return cGroup; }
		
		//'<ReglesSpeciales>'
		public Keyword getReglesSpecialesKeyword_0() { return cReglesSpecialesKeyword_0; }
		
		//enumReglesDeposeCartes+=EnumReglesDeposeCartes
		public Assignment getEnumReglesDeposeCartesAssignment_1() { return cEnumReglesDeposeCartesAssignment_1; }
		
		//EnumReglesDeposeCartes
		public RuleCall getEnumReglesDeposeCartesEnumReglesDeposeCartesParserRuleCall_1_0() { return cEnumReglesDeposeCartesEnumReglesDeposeCartesParserRuleCall_1_0; }
		
		//'</ReglesSpeciales>'
		public Keyword getReglesSpecialesKeyword_2() { return cReglesSpecialesKeyword_2; }
	}
	public class EnumReglesDeposeCartesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.EnumReglesDeposeCartes");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cRegleKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cCumulPlusDeuxAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cCumulPlusDeuxCumul_2Keyword_0_1_0 = (Keyword)cCumulPlusDeuxAssignment_0_1.eContents().get(0);
		private final Keyword cRegleKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cRegleKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cCumulPlusQuatreAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cCumulPlusQuatreCumul_4Keyword_1_1_0 = (Keyword)cCumulPlusQuatreAssignment_1_1.eContents().get(0);
		private final Keyword cRegleKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cRegleKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuiteClassiqueAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cSuiteClassiqueSuite_classiqueKeyword_2_1_0 = (Keyword)cSuiteClassiqueAssignment_2_1.eContents().get(0);
		private final Keyword cRegleKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cRegleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSuiteRoyaleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Keyword cSuiteRoyaleSuite_royaleKeyword_3_1_0 = (Keyword)cSuiteRoyaleAssignment_3_1.eContents().get(0);
		private final Keyword cRegleKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cRegleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInterceptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Keyword cInterceptionInterceptionKeyword_4_1_0 = (Keyword)cInterceptionAssignment_4_1.eContents().get(0);
		private final Keyword cRegleKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cRegleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPlus4OuRienAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Keyword cPlus4OuRien4_ou_rienKeyword_5_1_0 = (Keyword)cPlus4OuRienAssignment_5_1.eContents().get(0);
		private final Keyword cRegleKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//EnumReglesDeposeCartes:
		//	('<Regle>' cumulPlusDeux='cumul_+2' '</Regle>')?
		//	& ('<Regle>' cumulPlusQuatre='cumul_+4' '</Regle>')?
		//	& ('<Regle>' suiteClassique='suite_classique' '</Regle>')?
		//	& ('<Regle>' suiteRoyale='suite_royale' '</Regle>')?
		//	& ('<Regle>' interception='interception' '</Regle>')?
		//	& ('<Regle>' plus4OuRien='+4_ou_rien' '</Regle>')?;
		@Override public ParserRule getRule() { return rule; }
		
		//('<Regle>' cumulPlusDeux='cumul_+2' '</Regle>')? & ('<Regle>' cumulPlusQuatre='cumul_+4' '</Regle>')? & ('<Regle>'
		//suiteClassique='suite_classique' '</Regle>')? & ('<Regle>' suiteRoyale='suite_royale' '</Regle>')? & ('<Regle>'
		//interception='interception' '</Regle>')? & ('<Regle>' plus4OuRien='+4_ou_rien' '</Regle>')?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('<Regle>' cumulPlusDeux='cumul_+2' '</Regle>')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'<Regle>'
		public Keyword getRegleKeyword_0_0() { return cRegleKeyword_0_0; }
		
		//cumulPlusDeux='cumul_+2'
		public Assignment getCumulPlusDeuxAssignment_0_1() { return cCumulPlusDeuxAssignment_0_1; }
		
		//'cumul_+2'
		public Keyword getCumulPlusDeuxCumul_2Keyword_0_1_0() { return cCumulPlusDeuxCumul_2Keyword_0_1_0; }
		
		//'</Regle>'
		public Keyword getRegleKeyword_0_2() { return cRegleKeyword_0_2; }
		
		//('<Regle>' cumulPlusQuatre='cumul_+4' '</Regle>')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'<Regle>'
		public Keyword getRegleKeyword_1_0() { return cRegleKeyword_1_0; }
		
		//cumulPlusQuatre='cumul_+4'
		public Assignment getCumulPlusQuatreAssignment_1_1() { return cCumulPlusQuatreAssignment_1_1; }
		
		//'cumul_+4'
		public Keyword getCumulPlusQuatreCumul_4Keyword_1_1_0() { return cCumulPlusQuatreCumul_4Keyword_1_1_0; }
		
		//'</Regle>'
		public Keyword getRegleKeyword_1_2() { return cRegleKeyword_1_2; }
		
		//('<Regle>' suiteClassique='suite_classique' '</Regle>')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'<Regle>'
		public Keyword getRegleKeyword_2_0() { return cRegleKeyword_2_0; }
		
		//suiteClassique='suite_classique'
		public Assignment getSuiteClassiqueAssignment_2_1() { return cSuiteClassiqueAssignment_2_1; }
		
		//'suite_classique'
		public Keyword getSuiteClassiqueSuite_classiqueKeyword_2_1_0() { return cSuiteClassiqueSuite_classiqueKeyword_2_1_0; }
		
		//'</Regle>'
		public Keyword getRegleKeyword_2_2() { return cRegleKeyword_2_2; }
		
		//('<Regle>' suiteRoyale='suite_royale' '</Regle>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<Regle>'
		public Keyword getRegleKeyword_3_0() { return cRegleKeyword_3_0; }
		
		//suiteRoyale='suite_royale'
		public Assignment getSuiteRoyaleAssignment_3_1() { return cSuiteRoyaleAssignment_3_1; }
		
		//'suite_royale'
		public Keyword getSuiteRoyaleSuite_royaleKeyword_3_1_0() { return cSuiteRoyaleSuite_royaleKeyword_3_1_0; }
		
		//'</Regle>'
		public Keyword getRegleKeyword_3_2() { return cRegleKeyword_3_2; }
		
		//('<Regle>' interception='interception' '</Regle>')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'<Regle>'
		public Keyword getRegleKeyword_4_0() { return cRegleKeyword_4_0; }
		
		//interception='interception'
		public Assignment getInterceptionAssignment_4_1() { return cInterceptionAssignment_4_1; }
		
		//'interception'
		public Keyword getInterceptionInterceptionKeyword_4_1_0() { return cInterceptionInterceptionKeyword_4_1_0; }
		
		//'</Regle>'
		public Keyword getRegleKeyword_4_2() { return cRegleKeyword_4_2; }
		
		//('<Regle>' plus4OuRien='+4_ou_rien' '</Regle>')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'<Regle>'
		public Keyword getRegleKeyword_5_0() { return cRegleKeyword_5_0; }
		
		//plus4OuRien='+4_ou_rien'
		public Assignment getPlus4OuRienAssignment_5_1() { return cPlus4OuRienAssignment_5_1; }
		
		//'+4_ou_rien'
		public Keyword getPlus4OuRien4_ou_rienKeyword_5_1_0() { return cPlus4OuRien4_ou_rienKeyword_5_1_0; }
		
		//'</Regle>'
		public Keyword getRegleKeyword_5_2() { return cRegleKeyword_5_2; }
	}
	public class VisibiliteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.Visibilite");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cVisibleAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cVisibleVisibleKeyword_0_0 = (Keyword)cVisibleAssignment_0.eContents().get(0);
		private final Assignment cInvisibleAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cInvisibleInvisibleKeyword_1_0 = (Keyword)cInvisibleAssignment_1.eContents().get(0);
		
		//Visibilite:
		//	visible='visible' | invisible='invisible';
		@Override public ParserRule getRule() { return rule; }
		
		//visible='visible' | invisible='invisible'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//visible='visible'
		public Assignment getVisibleAssignment_0() { return cVisibleAssignment_0; }
		
		//'visible'
		public Keyword getVisibleVisibleKeyword_0_0() { return cVisibleVisibleKeyword_0_0; }
		
		//invisible='invisible'
		public Assignment getInvisibleAssignment_1() { return cInvisibleAssignment_1; }
		
		//'invisible'
		public Keyword getInvisibleInvisibleKeyword_1_0() { return cInvisibleInvisibleKeyword_1_0; }
	}
	public class NombreDePilesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.NombreDePiles");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDigitOneKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cDigitThreeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//NombreDePiles:
		//	'1' | '3';
		@Override public ParserRule getRule() { return rule; }
		
		//'1' | '3'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'1'
		public Keyword getDigitOneKeyword_0() { return cDigitOneKeyword_0; }
		
		//'3'
		public Keyword getDigitThreeKeyword_1() { return cDigitThreeKeyword_1; }
	}
	public class CartesSpecialesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.CartesSpeciales");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCartesSpecialesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnumCartesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEnumCartesEnumCartesParserRuleCall_1_0 = (RuleCall)cEnumCartesAssignment_1.eContents().get(0);
		private final Keyword cCartesSpecialesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//CartesSpeciales:
		//	'<CartesSpeciales>'
		//	enumCartes+=EnumCartes
		//	'</CartesSpeciales>';
		@Override public ParserRule getRule() { return rule; }
		
		//'<CartesSpeciales>' enumCartes+=EnumCartes '</CartesSpeciales>'
		public Group getGroup() { return cGroup; }
		
		//'<CartesSpeciales>'
		public Keyword getCartesSpecialesKeyword_0() { return cCartesSpecialesKeyword_0; }
		
		//enumCartes+=EnumCartes
		public Assignment getEnumCartesAssignment_1() { return cEnumCartesAssignment_1; }
		
		//EnumCartes
		public RuleCall getEnumCartesEnumCartesParserRuleCall_1_0() { return cEnumCartesEnumCartesParserRuleCall_1_0; }
		
		//'</CartesSpeciales>'
		public Keyword getCartesSpecialesKeyword_2() { return cCartesSpecialesKeyword_2; }
	}
	public class EnumCartesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.EnumCartes");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cCarteKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cCarteUnoAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final Keyword cCarteUnoCarte_unoKeyword_0_1_0 = (Keyword)cCarteUnoAssignment_0_1.eContents().get(0);
		private final Keyword cCarteKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cCarteKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPlusQuatreNonContestableAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Keyword cPlusQuatreNonContestable4_non_contestableKeyword_1_1_0 = (Keyword)cPlusQuatreNonContestableAssignment_1_1.eContents().get(0);
		private final Keyword cCarteKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cCarteKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCarteZeroAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Keyword cCarteZero0_specialKeyword_2_1_0 = (Keyword)cCarteZeroAssignment_2_1.eContents().get(0);
		private final Keyword cCarteKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cCarteKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCarteSeptAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Keyword cCarteSept7_specialKeyword_3_1_0 = (Keyword)cCarteSeptAssignment_3_1.eContents().get(0);
		private final Keyword cCarteKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//EnumCartes:
		//	('<Carte>' carteUno='carte_uno' '</Carte>')?
		//	& ('<Carte>' plusQuatreNonContestable='+4_non_contestable' '</Carte>')?
		//	& ('<Carte>' carteZero='0_special' '</Carte>')?
		//	& ('<Carte>' carteSept='7_special' '</Carte>')?;
		@Override public ParserRule getRule() { return rule; }
		
		//('<Carte>' carteUno='carte_uno' '</Carte>')? & ('<Carte>' plusQuatreNonContestable='+4_non_contestable' '</Carte>')? &
		//('<Carte>' carteZero='0_special' '</Carte>')? & ('<Carte>' carteSept='7_special' '</Carte>')?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//('<Carte>' carteUno='carte_uno' '</Carte>')?
		public Group getGroup_0() { return cGroup_0; }
		
		//'<Carte>'
		public Keyword getCarteKeyword_0_0() { return cCarteKeyword_0_0; }
		
		//carteUno='carte_uno'
		public Assignment getCarteUnoAssignment_0_1() { return cCarteUnoAssignment_0_1; }
		
		//'carte_uno'
		public Keyword getCarteUnoCarte_unoKeyword_0_1_0() { return cCarteUnoCarte_unoKeyword_0_1_0; }
		
		//'</Carte>'
		public Keyword getCarteKeyword_0_2() { return cCarteKeyword_0_2; }
		
		//('<Carte>' plusQuatreNonContestable='+4_non_contestable' '</Carte>')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'<Carte>'
		public Keyword getCarteKeyword_1_0() { return cCarteKeyword_1_0; }
		
		//plusQuatreNonContestable='+4_non_contestable'
		public Assignment getPlusQuatreNonContestableAssignment_1_1() { return cPlusQuatreNonContestableAssignment_1_1; }
		
		//'+4_non_contestable'
		public Keyword getPlusQuatreNonContestable4_non_contestableKeyword_1_1_0() { return cPlusQuatreNonContestable4_non_contestableKeyword_1_1_0; }
		
		//'</Carte>'
		public Keyword getCarteKeyword_1_2() { return cCarteKeyword_1_2; }
		
		//('<Carte>' carteZero='0_special' '</Carte>')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'<Carte>'
		public Keyword getCarteKeyword_2_0() { return cCarteKeyword_2_0; }
		
		//carteZero='0_special'
		public Assignment getCarteZeroAssignment_2_1() { return cCarteZeroAssignment_2_1; }
		
		//'0_special'
		public Keyword getCarteZero0_specialKeyword_2_1_0() { return cCarteZero0_specialKeyword_2_1_0; }
		
		//'</Carte>'
		public Keyword getCarteKeyword_2_2() { return cCarteKeyword_2_2; }
		
		//('<Carte>' carteSept='7_special' '</Carte>')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'<Carte>'
		public Keyword getCarteKeyword_3_0() { return cCarteKeyword_3_0; }
		
		//carteSept='7_special'
		public Assignment getCarteSeptAssignment_3_1() { return cCarteSeptAssignment_3_1; }
		
		//'7_special'
		public Keyword getCarteSept7_specialKeyword_3_1_0() { return cCarteSept7_specialKeyword_3_1_0; }
		
		//'</Carte>'
		public Keyword getCarteKeyword_3_2() { return cCarteKeyword_3_2; }
	}
	public class NombreDePiochesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.NombreDePioches");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cUneFoisAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cUneFois1Keyword_0_0_0 = (Keyword)cUneFoisAssignment_0_0.eContents().get(0);
		private final Assignment cPeutJouerAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cPeutJouerPeutJouerParserRuleCall_0_1_0 = (RuleCall)cPeutJouerAssignment_0_1.eContents().get(0);
		private final Assignment cTroisFoisAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cTroisFois3Keyword_1_0 = (Keyword)cTroisFoisAssignment_1.eContents().get(0);
		
		//NombreDePioches:
		//	uneFois='1' peutJouer=PeutJouer | troisFois='3';
		@Override public ParserRule getRule() { return rule; }
		
		//uneFois='1' peutJouer=PeutJouer | troisFois='3'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//uneFois='1' peutJouer=PeutJouer
		public Group getGroup_0() { return cGroup_0; }
		
		//uneFois='1'
		public Assignment getUneFoisAssignment_0_0() { return cUneFoisAssignment_0_0; }
		
		//'1'
		public Keyword getUneFois1Keyword_0_0_0() { return cUneFois1Keyword_0_0_0; }
		
		//peutJouer=PeutJouer
		public Assignment getPeutJouerAssignment_0_1() { return cPeutJouerAssignment_0_1; }
		
		//PeutJouer
		public RuleCall getPeutJouerPeutJouerParserRuleCall_0_1_0() { return cPeutJouerPeutJouerParserRuleCall_0_1_0; }
		
		//troisFois='3'
		public Assignment getTroisFoisAssignment_1() { return cTroisFoisAssignment_1; }
		
		//'3'
		public Keyword getTroisFois3Keyword_1_0() { return cTroisFois3Keyword_1_0; }
	}
	public class PeutJouerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.PeutJouer");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cPeutJouerEnsuiteAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cPeutJouerEnsuitePeut_jouer_ensuiteKeyword_0_0 = (Keyword)cPeutJouerEnsuiteAssignment_0.eContents().get(0);
		private final Assignment cPeutPasJouerEnsuiteAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cPeutPasJouerEnsuitePeut_pas_jouer_ensuiteKeyword_1_0 = (Keyword)cPeutPasJouerEnsuiteAssignment_1.eContents().get(0);
		
		//PeutJouer:
		//	peutJouerEnsuite='peut_jouer_ensuite' | peutPasJouerEnsuite='peut_pas_jouer_ensuite';
		@Override public ParserRule getRule() { return rule; }
		
		//peutJouerEnsuite='peut_jouer_ensuite' | peutPasJouerEnsuite='peut_pas_jouer_ensuite'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//peutJouerEnsuite='peut_jouer_ensuite'
		public Assignment getPeutJouerEnsuiteAssignment_0() { return cPeutJouerEnsuiteAssignment_0; }
		
		//'peut_jouer_ensuite'
		public Keyword getPeutJouerEnsuitePeut_jouer_ensuiteKeyword_0_0() { return cPeutJouerEnsuitePeut_jouer_ensuiteKeyword_0_0; }
		
		//peutPasJouerEnsuite='peut_pas_jouer_ensuite'
		public Assignment getPeutPasJouerEnsuiteAssignment_1() { return cPeutPasJouerEnsuiteAssignment_1; }
		
		//'peut_pas_jouer_ensuite'
		public Keyword getPeutPasJouerEnsuitePeut_pas_jouer_ensuiteKeyword_1_0() { return cPeutPasJouerEnsuitePeut_pas_jouer_ensuiteKeyword_1_0; }
	}
	
	public class NbCartesTalonElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.UnoDsl.NbCartesTalon");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUneCarteTalonEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUneCarteTalon1Keyword_0_0 = (Keyword)cUneCarteTalonEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cQuatreCartesTalonEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cQuatreCartesTalon4Keyword_1_0 = (Keyword)cQuatreCartesTalonEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum NbCartesTalon:
		//	uneCarteTalon='1' | quatreCartesTalon='4';
		public EnumRule getRule() { return rule; }
		
		//uneCarteTalon='1' | quatreCartesTalon='4'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//uneCarteTalon='1'
		public EnumLiteralDeclaration getUneCarteTalonEnumLiteralDeclaration_0() { return cUneCarteTalonEnumLiteralDeclaration_0; }
		
		//'1'
		public Keyword getUneCarteTalon1Keyword_0_0() { return cUneCarteTalon1Keyword_0_0; }
		
		//quatreCartesTalon='4'
		public EnumLiteralDeclaration getQuatreCartesTalonEnumLiteralDeclaration_1() { return cQuatreCartesTalonEnumLiteralDeclaration_1; }
		
		//'4'
		public Keyword getQuatreCartesTalon4Keyword_1_0() { return cQuatreCartesTalon4Keyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final UnoConfigElements pUnoConfig;
	private final NbCartesTalonElements eNbCartesTalon;
	private final TempsLimiteElements pTempsLimite;
	private final DeposeCartesElements pDeposeCartes;
	private final EnumReglesDeposeCartesElements pEnumReglesDeposeCartes;
	private final VisibiliteElements pVisibilite;
	private final NombreDePilesElements pNombreDePiles;
	private final CartesSpecialesElements pCartesSpeciales;
	private final EnumCartesElements pEnumCartes;
	private final NombreDePiochesElements pNombreDePioches;
	private final PeutJouerElements pPeutJouer;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public UnoDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pUnoConfig = new UnoConfigElements();
		this.eNbCartesTalon = new NbCartesTalonElements();
		this.pTempsLimite = new TempsLimiteElements();
		this.pDeposeCartes = new DeposeCartesElements();
		this.pEnumReglesDeposeCartes = new EnumReglesDeposeCartesElements();
		this.pVisibilite = new VisibiliteElements();
		this.pNombreDePiles = new NombreDePilesElements();
		this.pCartesSpeciales = new CartesSpecialesElements();
		this.pEnumCartes = new EnumCartesElements();
		this.pNombreDePioches = new NombreDePiochesElements();
		this.pPeutJouer = new PeutJouerElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.UnoDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	'<UnoConfig>' unoRules+=UnoConfig '</UnoConfig>';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//UnoConfig:
	//	'<TalonJeu' 'nbCartes' '=' nbCartesTalon=NbCartesTalon '/>' & tempsLimite=TempsLimite? & deposeCartes=DeposeCartes? &
	//	'<Main' 'visibilite' '=' visibilite=Visibilite 'nombreDePiles' '=' nombreDePiles=NombreDePiles '/>' &
	//	cartesSpeciales=CartesSpeciales? & '<Pioche>' nombreDePioches=NombreDePioches '</Pioche>';
	public UnoConfigElements getUnoConfigAccess() {
		return pUnoConfig;
	}
	
	public ParserRule getUnoConfigRule() {
		return getUnoConfigAccess().getRule();
	}
	
	//enum NbCartesTalon:
	//	uneCarteTalon='1' | quatreCartesTalon='4';
	public NbCartesTalonElements getNbCartesTalonAccess() {
		return eNbCartesTalon;
	}
	
	public EnumRule getNbCartesTalonRule() {
		return getNbCartesTalonAccess().getRule();
	}
	
	//TempsLimite:
	//	'<DureeTour' 'duree' '=' (INT | '0' | '1') '/>';
	public TempsLimiteElements getTempsLimiteAccess() {
		return pTempsLimite;
	}
	
	public ParserRule getTempsLimiteRule() {
		return getTempsLimiteAccess().getRule();
	}
	
	//DeposeCartes:
	//	'<ReglesSpeciales>'
	//	enumReglesDeposeCartes+=EnumReglesDeposeCartes
	//	'</ReglesSpeciales>';
	public DeposeCartesElements getDeposeCartesAccess() {
		return pDeposeCartes;
	}
	
	public ParserRule getDeposeCartesRule() {
		return getDeposeCartesAccess().getRule();
	}
	
	//EnumReglesDeposeCartes:
	//	('<Regle>' cumulPlusDeux='cumul_+2' '</Regle>')?
	//	& ('<Regle>' cumulPlusQuatre='cumul_+4' '</Regle>')?
	//	& ('<Regle>' suiteClassique='suite_classique' '</Regle>')?
	//	& ('<Regle>' suiteRoyale='suite_royale' '</Regle>')?
	//	& ('<Regle>' interception='interception' '</Regle>')?
	//	& ('<Regle>' plus4OuRien='+4_ou_rien' '</Regle>')?;
	public EnumReglesDeposeCartesElements getEnumReglesDeposeCartesAccess() {
		return pEnumReglesDeposeCartes;
	}
	
	public ParserRule getEnumReglesDeposeCartesRule() {
		return getEnumReglesDeposeCartesAccess().getRule();
	}
	
	//Visibilite:
	//	visible='visible' | invisible='invisible';
	public VisibiliteElements getVisibiliteAccess() {
		return pVisibilite;
	}
	
	public ParserRule getVisibiliteRule() {
		return getVisibiliteAccess().getRule();
	}
	
	//NombreDePiles:
	//	'1' | '3';
	public NombreDePilesElements getNombreDePilesAccess() {
		return pNombreDePiles;
	}
	
	public ParserRule getNombreDePilesRule() {
		return getNombreDePilesAccess().getRule();
	}
	
	//CartesSpeciales:
	//	'<CartesSpeciales>'
	//	enumCartes+=EnumCartes
	//	'</CartesSpeciales>';
	public CartesSpecialesElements getCartesSpecialesAccess() {
		return pCartesSpeciales;
	}
	
	public ParserRule getCartesSpecialesRule() {
		return getCartesSpecialesAccess().getRule();
	}
	
	//EnumCartes:
	//	('<Carte>' carteUno='carte_uno' '</Carte>')?
	//	& ('<Carte>' plusQuatreNonContestable='+4_non_contestable' '</Carte>')?
	//	& ('<Carte>' carteZero='0_special' '</Carte>')?
	//	& ('<Carte>' carteSept='7_special' '</Carte>')?;
	public EnumCartesElements getEnumCartesAccess() {
		return pEnumCartes;
	}
	
	public ParserRule getEnumCartesRule() {
		return getEnumCartesAccess().getRule();
	}
	
	//NombreDePioches:
	//	uneFois='1' peutJouer=PeutJouer | troisFois='3';
	public NombreDePiochesElements getNombreDePiochesAccess() {
		return pNombreDePioches;
	}
	
	public ParserRule getNombreDePiochesRule() {
		return getNombreDePiochesAccess().getRule();
	}
	
	//PeutJouer:
	//	peutJouerEnsuite='peut_jouer_ensuite' | peutPasJouerEnsuite='peut_pas_jouer_ensuite';
	public PeutJouerElements getPeutJouerAccess() {
		return pPeutJouer;
	}
	
	public ParserRule getPeutJouerRule() {
		return getPeutJouerAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
