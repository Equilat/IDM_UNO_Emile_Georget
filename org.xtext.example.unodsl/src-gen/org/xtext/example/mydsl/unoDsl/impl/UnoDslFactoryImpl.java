/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.unoDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EDataType;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.unoDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class UnoDslFactoryImpl extends EFactoryImpl implements UnoDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static UnoDslFactory init()
  {
    try
    {
      UnoDslFactory theUnoDslFactory = (UnoDslFactory)EPackage.Registry.INSTANCE.getEFactory(UnoDslPackage.eNS_URI);
      if (theUnoDslFactory != null)
      {
        return theUnoDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new UnoDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UnoDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case UnoDslPackage.MODEL: return createModel();
      case UnoDslPackage.UNO_CONFIG: return createUnoConfig();
      case UnoDslPackage.DEPOSE_CARTES: return createDeposeCartes();
      case UnoDslPackage.ENUM_REGLES_DEPOSE_CARTES: return createEnumReglesDeposeCartes();
      case UnoDslPackage.VISIBILITE: return createVisibilite();
      case UnoDslPackage.CARTES_SPECIALES: return createCartesSpeciales();
      case UnoDslPackage.ENUM_CARTES: return createEnumCartes();
      case UnoDslPackage.NOMBRE_DE_PIOCHES: return createNombreDePioches();
      case UnoDslPackage.PEUT_JOUER: return createPeutJouer();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object createFromString(EDataType eDataType, String initialValue)
  {
    switch (eDataType.getClassifierID())
    {
      case UnoDslPackage.NB_CARTES_TALON:
        return createNbCartesTalonFromString(eDataType, initialValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String convertToString(EDataType eDataType, Object instanceValue)
  {
    switch (eDataType.getClassifierID())
    {
      case UnoDslPackage.NB_CARTES_TALON:
        return convertNbCartesTalonToString(eDataType, instanceValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UnoConfig createUnoConfig()
  {
    UnoConfigImpl unoConfig = new UnoConfigImpl();
    return unoConfig;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeposeCartes createDeposeCartes()
  {
    DeposeCartesImpl deposeCartes = new DeposeCartesImpl();
    return deposeCartes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumReglesDeposeCartes createEnumReglesDeposeCartes()
  {
    EnumReglesDeposeCartesImpl enumReglesDeposeCartes = new EnumReglesDeposeCartesImpl();
    return enumReglesDeposeCartes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Visibilite createVisibilite()
  {
    VisibiliteImpl visibilite = new VisibiliteImpl();
    return visibilite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CartesSpeciales createCartesSpeciales()
  {
    CartesSpecialesImpl cartesSpeciales = new CartesSpecialesImpl();
    return cartesSpeciales;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumCartes createEnumCartes()
  {
    EnumCartesImpl enumCartes = new EnumCartesImpl();
    return enumCartes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NombreDePioches createNombreDePioches()
  {
    NombreDePiochesImpl nombreDePioches = new NombreDePiochesImpl();
    return nombreDePioches;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PeutJouer createPeutJouer()
  {
    PeutJouerImpl peutJouer = new PeutJouerImpl();
    return peutJouer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NbCartesTalon createNbCartesTalonFromString(EDataType eDataType, String initialValue)
  {
    NbCartesTalon result = NbCartesTalon.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertNbCartesTalonToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UnoDslPackage getUnoDslPackage()
  {
    return (UnoDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static UnoDslPackage getPackage()
  {
    return UnoDslPackage.eINSTANCE;
  }

} //UnoDslFactoryImpl
