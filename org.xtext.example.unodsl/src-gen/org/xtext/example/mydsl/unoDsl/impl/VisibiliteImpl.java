/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.mydsl.unoDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.unoDsl.UnoDslPackage;
import org.xtext.example.mydsl.unoDsl.Visibilite;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Visibilite</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.unoDsl.impl.VisibiliteImpl#getVisible <em>Visible</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.unoDsl.impl.VisibiliteImpl#getInvisible <em>Invisible</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VisibiliteImpl extends MinimalEObjectImpl.Container implements Visibilite
{
  /**
   * The default value of the '{@link #getVisible() <em>Visible</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisible()
   * @generated
   * @ordered
   */
  protected static final String VISIBLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisible() <em>Visible</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisible()
   * @generated
   * @ordered
   */
  protected String visible = VISIBLE_EDEFAULT;

  /**
   * The default value of the '{@link #getInvisible() <em>Invisible</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInvisible()
   * @generated
   * @ordered
   */
  protected static final String INVISIBLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getInvisible() <em>Invisible</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInvisible()
   * @generated
   * @ordered
   */
  protected String invisible = INVISIBLE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VisibiliteImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UnoDslPackage.Literals.VISIBILITE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisible()
  {
    return visible;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisible(String newVisible)
  {
    String oldVisible = visible;
    visible = newVisible;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnoDslPackage.VISIBILITE__VISIBLE, oldVisible, visible));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getInvisible()
  {
    return invisible;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInvisible(String newInvisible)
  {
    String oldInvisible = invisible;
    invisible = newInvisible;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnoDslPackage.VISIBILITE__INVISIBLE, oldInvisible, invisible));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UnoDslPackage.VISIBILITE__VISIBLE:
        return getVisible();
      case UnoDslPackage.VISIBILITE__INVISIBLE:
        return getInvisible();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UnoDslPackage.VISIBILITE__VISIBLE:
        setVisible((String)newValue);
        return;
      case UnoDslPackage.VISIBILITE__INVISIBLE:
        setInvisible((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UnoDslPackage.VISIBILITE__VISIBLE:
        setVisible(VISIBLE_EDEFAULT);
        return;
      case UnoDslPackage.VISIBILITE__INVISIBLE:
        setInvisible(INVISIBLE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UnoDslPackage.VISIBILITE__VISIBLE:
        return VISIBLE_EDEFAULT == null ? visible != null : !VISIBLE_EDEFAULT.equals(visible);
      case UnoDslPackage.VISIBILITE__INVISIBLE:
        return INVISIBLE_EDEFAULT == null ? invisible != null : !INVISIBLE_EDEFAULT.equals(invisible);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (visible: ");
    result.append(visible);
    result.append(", invisible: ");
    result.append(invisible);
    result.append(')');
    return result.toString();
  }

} //VisibiliteImpl
